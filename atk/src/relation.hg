/* Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


_DEFS(atkmm,atk)
_PINCLUDE(glibmm/private/object_p.h)

#include <glibmm/object.h>

namespace Atk
{

_CC_INCLUDE(atk/atk-enum-types.h)
_WRAP_ENUM(RelationType, AtkRelationType, s#^NULL$#NONE#)

class Object;

/** An Atk::Relation describes a relation between an object and one or more other objects.
 * The actual relations that an object has with other objects are defined as an Atk::RelationSet,
 * which is a set of Atk::Relations.
 */
class Relation : public Glib::Object
{
  _CLASS_GOBJECT(Relation, AtkRelation, ATK_RELATION, Glib::Object, GObject)

protected:
  explicit Relation(const std::vector<Glib::RefPtr<Atk::Object>>& targets,
                    RelationType relationship);

public:
  _WRAP_CREATE(const std::vector<Glib::RefPtr<Atk::Object>>& targets,
               RelationType relationship = RelationType::NONE)

  _WRAP_METHOD(RelationType get_relation_type() const, atk_relation_get_relation_type)

  std::vector<Glib::RefPtr<Atk::Object>> get_target();
  std::vector<Glib::RefPtr<const Atk::Object>> get_target() const;
  _IGNORE(atk_relation_get_target)
  
  _WRAP_METHOD(void add_target(const Glib::RefPtr<Atk::Object>& target), atk_relation_add_target)
};

} // namespace Atk

